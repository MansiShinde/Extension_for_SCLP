
	.text 			# The .text assembler directive indicates
	.globl main		# The following is the code (as oppose to data)
main:				# .globl makes main know to the 
				# outside of the program.
# Prologue begins 
	sw $ra, 0($sp)		# Save the return address
	sw $fp, -4($sp)		# Save the frame pointer
	sub $fp, $sp, 8		# Update the frame pointer

	sub $sp, $sp, 24		# Make space for the locals
# Prologue ends

	li $v0, 0		# Source:0
	sw $v0, -16($fp)	# Dest: max_
	li $v0, 5		# Source:5
	sw $v0, -4($fp)	# Dest: a_
	li $v0, 1		# Source:1
	sw $v0, -8($fp)	# Dest: b_
	lw $v0, -4($fp)		# Source:a_
	lw $t1, -16($fp)		# Source:max_
	sgt $t0, $v0, $t1	# Result:temp0, Opd1:a_, Opd2:max_
	xori $v0, $t0, 1
	bgtz $v0, Label4 
	lw $v0, -4($fp)		# Source:a_
	sw $v0, -16($fp)	# Dest: max_
	j Label8

Label4:    	
	lw $v0, -8($fp)		# Source:b_
	lw $t1, -16($fp)		# Source:max_
	sgt $t0, $v0, $t1	# Result:temp2, Opd1:b_, Opd2:max_
	xori $v0, $t0, 1
	bgtz $v0, Label6 
	lw $v0, -8($fp)		# Source:b_
	sw $v0, -16($fp)	# Dest: max_
	j Label8

Label6:    	
	lw $v0, -12($fp)		# Source:c_
	lw $t1, -16($fp)		# Source:max_
	sgt $t0, $v0, $t1	# Result:temp4, Opd1:c_, Opd2:max_
	xori $v0, $t0, 1
	bgtz $v0, Label8 
	lw $v0, -12($fp)		# Source:c_
	sw $v0, -16($fp)	# Dest: max_
	j Label8

Label8:    	

Label8:    	

Label8:    	
	li $v0, 2		# Source:2
	sw $v0, -12($fp)	# Dest: c_

# Epilogue Begins
epilogue_main:
	add $sp, $sp, 24
	lw $fp, -4($sp)  
	lw $ra, 0($sp)   
	jr        $31		# Jump back to the called procedure
# Epilogue Ends

