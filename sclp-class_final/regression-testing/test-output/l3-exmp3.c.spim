
	.text 			# The .text assembler directive indicates
	.globl main		# The following is the code (as oppose to data)
main:				# .globl makes main know to the 
				# outside of the program.
# Prologue begins 
	sw $ra, 0($sp)		# Save the return address
	sw $fp, -4($sp)		# Save the frame pointer
	sub $fp, $sp, 8		# Update the frame pointer

	sub $sp, $sp, 44		# Make space for the locals
# Prologue ends

	li $v0, 5		# Source:5
	sw $v0, -8($fp)	# Dest: a_
	li $v0, 3		# Source:3
	sw $v0, -4($fp)	# Dest: b_
	li $v0, 7		# Loading 7 in v0 to indicate syscall to read double value
	syscall
	s.d $f0, -24($fp)	# Moving the read value from register f0
	li $v0, 7		# Loading 7 in v0 to indicate syscall to read double value
	syscall
	s.d $f0, -16($fp)	# Moving the read value from register f0
	lw $v0, -8($fp)		# Source:a_
	lw $t1, -4($fp)		# Source:b_
	sgt $t0, $v0, $t1	# Result:temp0, Opd1:a_, Opd2:b_
	xori $v0, $t0, 1
	bgtz $v0, Label7 
	l.d $f2, -24($fp)		# Source:c_
	l.d $f4, -16($fp)		# Source:d_
	c.le.d $f2, $f4	
	li $v0, 1		# Opd1:c_, Opd2:d_, 1
	movf $t0, $v0, 0
	xori $t1, $t0, 1
	bgtz $t1, Label5 
	lw $t0, -8($fp)		# Source:a_
	lw $t2, -4($fp)		# Source:b_
	mul $t1, $t0, $t2	# Result:temp2, Opd1:a_, Opd2:b_
	sw $t1, -28($fp)	# Dest: stemp0
	j Label6

Label5:    	
	lw $t0, -8($fp)		# Source:a_
	lw $t2, -4($fp)		# Source:b_
	sub $t1, $t0, $t2	# Result:temp3, Opd1:a_, Opd2:b_
	sw $t1, -28($fp)	# Dest: stemp0

Label6:    	
	lw $t0, -28($fp)		# Source:stemp0
	sw $t0, -36($fp)	# Dest: stemp2
	j Label11

Label7:    	
	l.d $f2, -16($fp)		# Source:d_
	l.d $f4, -24($fp)		# Source:c_
	c.le.d $f2, $f4	
	li $t0, 1		# Opd1:d_, Opd2:c_, 1
	movf $t1, $t0, 0
	xori $t2, $t1, 1
	bgtz $t2, Label9 
	lw $t1, -8($fp)		# Source:a_
	li $t3, 3		# Source:3
	add $t2, $t1, $t3	# Result:temp6, Opd1:a_, Opd2:3
	sw $t2, -32($fp)	# Dest: stemp1
	j Label10

Label9:    	
	lw $t1, -4($fp)		# Source:b_
	li $t3, 10		# Source:10
	mul $t2, $t1, $t3	# Result:temp7, Opd1:b_, Opd2:10
	sw $t2, -32($fp)	# Dest: stemp1

Label10:    	
	lw $t1, -32($fp)		# Source:stemp1
	sw $t1, -36($fp)	# Dest: stemp2

Label11:    	
	lw $t0, -36($fp)		# Source:stemp2
	sw $t0, -8($fp)	# Dest: a_
	li $v0, 1		# Loading 1 in v0 to indicate syscall to print integter value
	lw $a0, -8($fp)		# Moving the value to be printed into register a0
	syscall

# Epilogue Begins
epilogue_main:
	add $sp, $sp, 44
	lw $fp, -4($sp)  
	lw $ra, 0($sp)   
	jr        $31		# Jump back to the called procedure
# Epilogue Ends

