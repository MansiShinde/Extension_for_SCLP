Program:
**PROCEDURE: main, Return Type: <void>**BEGIN: Abstract Syntax Tree 
         Asgn:
           LHS (Name : a_<int>)
           RHS (Num : 5<int>)
         Asgn:
           LHS (Name : b_<int>)
           RHS (Num : 3<int>)
         Read: Name : c_<float>
         Read: Name : d_<float>
         Asgn:
           LHS (Name : a_<int>)
           RHS (
                 Condition: GT<bool>
                   L_Opd (Name : a_<int>)
                   R_Opd (Name : b_<int>)
                 True_Part (
                       Condition: GT<bool>
                         L_Opd (Name : c_<float>)
                         R_Opd (Name : d_<float>)
                       True_Part (
                         Arith: Mult<int>
                           L_Opd (Name : a_<int>)
                           R_Opd (Name : b_<int>))
                       False_Part (
                         Arith: Minus<int>
                           L_Opd (Name : a_<int>)
                           R_Opd (Name : b_<int>)))
                 False_Part (
                       Condition: GT<bool>
                         L_Opd (Name : d_<float>)
                         R_Opd (Name : c_<float>)
                       True_Part (
                         Arith: Plus<int>
                           L_Opd (Name : a_<int>)
                           R_Opd (Num : 3<int>))
                       False_Part (
                         Arith: Mult<int>
                           L_Opd (Name : b_<int>)
                           R_Opd (Num : 10<int>))))
         Write: Name : a_<int>
**END: Abstract Syntax Tree 
