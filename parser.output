Grammar

    0 $accept: program $end

    1 program: global_decl_statement func_def_list
    2        | func_def_list

    3 global_decl_statement: global_decl_statement func_decl
    4                      | global_decl_statement var_decl
    5                      | var_decl
    6                      | func_decl
    7                      | class_declaration_stat

    8 class_declaration_stat: CLASS NAME '{' block '}' ';'

    9 block: access_specifier_type ':' global_decl_statement

   10 access_specifier_type: PUBLIC
   11                      | PRIVATE

   12 func_decl: type NAME '(' dummy_formal_param_list ')' ';'
   13          | type NAME '(' ')' ';'
   14          | type NAME '(' formal_param_list ')' ';'

   15 dummy_formal_param_list: dummy_formal_param_list ',' dummy_formal_param
   16                        | dummy_formal_param

   17 dummy_formal_param: param_type

   18 func_def_list: func_def_list func_def
   19              | func_def

   20 func_def: type NAME '(' formal_param_list ')' '{' '}'
   21         | type NAME '(' formal_param_list ')' '{' var_decl_list statement_list '}'
   22         | type NAME '(' ')' '{' '}'
   23         | type NAME '(' ')' '{' var_decl_list statement_list '}'
   24         | type NAME '(' formal_param_list ')' '{' var_decl_list '}'
   25         | type NAME '(' ')' '{' var_decl_list '}'

   26 formal_param_list: formal_param_list ',' formal_param
   27                  | formal_param

   28 formal_param: param_type NAME

   29 param_type: INTEGER
   30           | FLOAT
   31           | BOOL

   32 statement_list: statement_list statement
   33               | statement

   34 statement: assignment_statement
   35          | if_statement
   36          | do_while_statement
   37          | while_statement
   38          | compound_statement
   39          | print_statement
   40          | read_statement
   41          | call_statement
   42          | return_statement

   43 call_statement: func_call ';'

   44 func_call: NAME '(' non_empty_arg_list ')'
   45          | NAME '(' ')'

   46 non_empty_arg_list: non_empty_arg_list ',' actual_arg
   47                   | actual_arg

   48 actual_arg: arith_expression

   49 return_statement: RETURN ';'
   50                 | RETURN arith_expression ';'

   51 var_decl_list: var_decl
   52              | var_decl_list var_decl

   53 var_decl: type variables_list ';'

   54 type: INTEGER
   55     | FLOAT
   56     | VOID
   57     | STRING
   58     | BOOL
   59     | NAME

   60 variables_list: NAME
   61               | variables_list ',' NAME

   62 assignment_statement: variable ASSIGN arith_expression ';'
   63                     | variable ASSIGN func_call ';'
   64                     | variable ASSIGN logical_expression ';'

   65 if_statement: IF '(' logical_expression ')' statement ELSE statement
   66             | IF '(' logical_expression ')' statement

   67 do_while_statement: DO statement WHILE '(' logical_expression ')' ';'

   68 while_statement: WHILE '(' logical_expression ')' statement

   69 compound_statement: '{' statement_list '}'
   70                   | '{' '}'

   71 print_statement: WRITE variable ';'
   72                | WRITE STRING_CONSTANT ';'

   73 read_statement: READ variable ';'

   74 arith_expression: operand '+' operand
   75                 | operand '-' operand
   76                 | operand '*' operand
   77                 | operand '/' operand
   78                 | '-' operand
   79                 | '(' operand ')'
   80                 | logical_expression '?' operand ':' operand
   81                 | expression_term

   82 operand: arith_expression

   83 expression_term: variable
   84                | constant

   85 rel_expression: operand LT operand
   86               | operand LE operand
   87               | operand GT operand
   88               | operand GE operand
   89               | operand NE operand
   90               | operand EQ operand

   91 logical_expression: logical_expression AND logical_expression
   92                   | logical_expression OR logical_expression
   93                   | NOT logical_expression
   94                   | '(' logical_expression ')'
   95                   | rel_expression
   96                   | AT variable

   97 variable: NAME

   98 constant: INTEGER_NUMBER
   99         | DOUBLE_NUMBER
  100         | STRING_CONSTANT


Terminals, with rules where they appear

$end (0) 0
'(' (40) 12 13 14 20 21 22 23 24 25 44 45 65 66 67 68 79 94
')' (41) 12 13 14 20 21 22 23 24 25 44 45 65 66 67 68 79 94
'*' (42) 76
'+' (43) 74
',' (44) 15 26 46 61
'-' (45) 75 78
'/' (47) 77
':' (58) 9 80
';' (59) 8 12 13 14 43 49 50 53 62 63 64 67 71 72 73
'?' (63) 80
'{' (123) 8 20 21 22 23 24 25 69 70
'}' (125) 8 20 21 22 23 24 25 69 70
error (256)
CLASS (258) 8
PRIVATE (259) 11
PUBLIC (260) 10
INTEGER_NUMBER (261) 98
DOUBLE_NUMBER (262) 99
NAME (263) 8 12 13 14 20 21 22 23 24 25 28 44 45 59 60 61 97
STRING_CONSTANT (264) 72 100
INTEGER (265) 29 54
FLOAT (266) 30 55
STRING (267) 57
BOOL (268) 31 58
ASSIGN (269) 62 63 64
VOID (270) 56
IF (271) 65 66
WHILE (272) 67 68
DO (273) 67
ELSE (274) 65
WRITE (275) 71 72
READ (276) 73
RETURN (277) 49 50
AT (278) 96
OR (279) 92
AND (280) 91
NE (281) 89
EQ (282) 90
LT (283) 85
LE (284) 86
GT (285) 87
GE (286) 88
NOT (287) 93
UMINUS (288)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1 2, on right: 0
global_decl_statement (48)
    on left: 3 4 5 6 7, on right: 1 3 4 9
class_declaration_stat (49)
    on left: 8, on right: 7
block (50)
    on left: 9, on right: 8
access_specifier_type (51)
    on left: 10 11, on right: 9
func_decl (52)
    on left: 12 13 14, on right: 3 6
dummy_formal_param_list (53)
    on left: 15 16, on right: 12 15
dummy_formal_param (54)
    on left: 17, on right: 15 16
func_def_list (55)
    on left: 18 19, on right: 1 2 18
func_def (56)
    on left: 20 21 22 23 24 25, on right: 18 19
formal_param_list (57)
    on left: 26 27, on right: 14 20 21 24 26
formal_param (58)
    on left: 28, on right: 26 27
param_type (59)
    on left: 29 30 31, on right: 17 28
statement_list (60)
    on left: 32 33, on right: 21 23 32 69
statement (61)
    on left: 34 35 36 37 38 39 40 41 42, on right: 32 33 65 66 67 68
call_statement (62)
    on left: 43, on right: 41
func_call (63)
    on left: 44 45, on right: 43 63
non_empty_arg_list (64)
    on left: 46 47, on right: 44 46
actual_arg (65)
    on left: 48, on right: 46 47
return_statement (66)
    on left: 49 50, on right: 42
var_decl_list (67)
    on left: 51 52, on right: 21 23 24 25 52
var_decl (68)
    on left: 53, on right: 4 5 51 52
type (69)
    on left: 54 55 56 57 58 59, on right: 12 13 14 20 21 22 23 24 25
    53
variables_list (70)
    on left: 60 61, on right: 53 61
assignment_statement (71)
    on left: 62 63 64, on right: 34
if_statement (72)
    on left: 65 66, on right: 35
do_while_statement (73)
    on left: 67, on right: 36
while_statement (74)
    on left: 68, on right: 37
compound_statement (75)
    on left: 69 70, on right: 38
print_statement (76)
    on left: 71 72, on right: 39
read_statement (77)
    on left: 73, on right: 40
arith_expression (78)
    on left: 74 75 76 77 78 79 80 81, on right: 48 50 62 82
operand (79)
    on left: 82, on right: 74 75 76 77 78 79 80 85 86 87 88 89 90
expression_term (80)
    on left: 83 84, on right: 81
rel_expression (81)
    on left: 85 86 87 88 89 90, on right: 95
logical_expression (82)
    on left: 91 92 93 94 95 96, on right: 64 65 66 67 68 80 91 92 93
    94
variable (83)
    on left: 97, on right: 62 63 64 71 73 83 96
constant (84)
    on left: 98 99 100, on right: 84


State 0

    0 $accept: . program $end

    CLASS    shift, and go to state 1
    NAME     shift, and go to state 2
    INTEGER  shift, and go to state 3
    FLOAT    shift, and go to state 4
    STRING   shift, and go to state 5
    BOOL     shift, and go to state 6
    VOID     shift, and go to state 7

    program                 go to state 8
    global_decl_statement   go to state 9
    class_declaration_stat  go to state 10
    func_decl               go to state 11
    func_def_list           go to state 12
    func_def                go to state 13
    var_decl                go to state 14
    type                    go to state 15


State 1

    8 class_declaration_stat: CLASS . NAME '{' block '}' ';'

    NAME  shift, and go to state 16


State 2

   59 type: NAME .

    $default  reduce using rule 59 (type)


State 3

   54 type: INTEGER .

    $default  reduce using rule 54 (type)


State 4

   55 type: FLOAT .

    $default  reduce using rule 55 (type)


State 5

   57 type: STRING .

    $default  reduce using rule 57 (type)


State 6

   58 type: BOOL .

    $default  reduce using rule 58 (type)


State 7

   56 type: VOID .

    $default  reduce using rule 56 (type)


State 8

    0 $accept: program . $end

    $end  shift, and go to state 17


State 9

    1 program: global_decl_statement . func_def_list
    3 global_decl_statement: global_decl_statement . func_decl
    4                      | global_decl_statement . var_decl

    NAME     shift, and go to state 2
    INTEGER  shift, and go to state 3
    FLOAT    shift, and go to state 4
    STRING   shift, and go to state 5
    BOOL     shift, and go to state 6
    VOID     shift, and go to state 7

    func_decl      go to state 18
    func_def_list  go to state 19
    func_def       go to state 13
    var_decl       go to state 20
    type           go to state 15


State 10

    7 global_decl_statement: class_declaration_stat .

    $default  reduce using rule 7 (global_decl_statement)


State 11

    6 global_decl_statement: func_decl .

    $default  reduce using rule 6 (global_decl_statement)


State 12

    2 program: func_def_list .
   18 func_def_list: func_def_list . func_def

    NAME     shift, and go to state 2
    INTEGER  shift, and go to state 3
    FLOAT    shift, and go to state 4
    STRING   shift, and go to state 5
    BOOL     shift, and go to state 6
    VOID     shift, and go to state 7

    $default  reduce using rule 2 (program)

    func_def  go to state 21
    type      go to state 22


State 13

   19 func_def_list: func_def .

    $default  reduce using rule 19 (func_def_list)


State 14

    5 global_decl_statement: var_decl .

    $default  reduce using rule 5 (global_decl_statement)


State 15

   12 func_decl: type . NAME '(' dummy_formal_param_list ')' ';'
   13          | type . NAME '(' ')' ';'
   14          | type . NAME '(' formal_param_list ')' ';'
   20 func_def: type . NAME '(' formal_param_list ')' '{' '}'
   21         | type . NAME '(' formal_param_list ')' '{' var_decl_list statement_list '}'
   22         | type . NAME '(' ')' '{' '}'
   23         | type . NAME '(' ')' '{' var_decl_list statement_list '}'
   24         | type . NAME '(' formal_param_list ')' '{' var_decl_list '}'
   25         | type . NAME '(' ')' '{' var_decl_list '}'
   53 var_decl: type . variables_list ';'

    NAME  shift, and go to state 23

    variables_list  go to state 24


State 16

    8 class_declaration_stat: CLASS NAME . '{' block '}' ';'

    '{'  shift, and go to state 25


State 17

    0 $accept: program $end .

    $default  accept


State 18

    3 global_decl_statement: global_decl_statement func_decl .

    $default  reduce using rule 3 (global_decl_statement)


State 19

    1 program: global_decl_statement func_def_list .
   18 func_def_list: func_def_list . func_def

    NAME     shift, and go to state 2
    INTEGER  shift, and go to state 3
    FLOAT    shift, and go to state 4
    STRING   shift, and go to state 5
    BOOL     shift, and go to state 6
    VOID     shift, and go to state 7

    $default  reduce using rule 1 (program)

    func_def  go to state 21
    type      go to state 22


State 20

    4 global_decl_statement: global_decl_statement var_decl .

    $default  reduce using rule 4 (global_decl_statement)


State 21

   18 func_def_list: func_def_list func_def .

    $default  reduce using rule 18 (func_def_list)


State 22

   20 func_def: type . NAME '(' formal_param_list ')' '{' '}'
   21         | type . NAME '(' formal_param_list ')' '{' var_decl_list statement_list '}'
   22         | type . NAME '(' ')' '{' '}'
   23         | type . NAME '(' ')' '{' var_decl_list statement_list '}'
   24         | type . NAME '(' formal_param_list ')' '{' var_decl_list '}'
   25         | type . NAME '(' ')' '{' var_decl_list '}'

    NAME  shift, and go to state 26


State 23

   12 func_decl: type NAME . '(' dummy_formal_param_list ')' ';'
   13          | type NAME . '(' ')' ';'
   14          | type NAME . '(' formal_param_list ')' ';'
   20 func_def: type NAME . '(' formal_param_list ')' '{' '}'
   21         | type NAME . '(' formal_param_list ')' '{' var_decl_list statement_list '}'
   22         | type NAME . '(' ')' '{' '}'
   23         | type NAME . '(' ')' '{' var_decl_list statement_list '}'
   24         | type NAME . '(' formal_param_list ')' '{' var_decl_list '}'
   25         | type NAME . '(' ')' '{' var_decl_list '}'
   60 variables_list: NAME .

    '('  shift, and go to state 27

    $default  reduce using rule 60 (variables_list)


State 24

   53 var_decl: type variables_list . ';'
   61 variables_list: variables_list . ',' NAME

    ';'  shift, and go to state 28
    ','  shift, and go to state 29


State 25

    8 class_declaration_stat: CLASS NAME '{' . block '}' ';'

    PRIVATE  shift, and go to state 30
    PUBLIC   shift, and go to state 31

    block                  go to state 32
    access_specifier_type  go to state 33


State 26

   20 func_def: type NAME . '(' formal_param_list ')' '{' '}'
   21         | type NAME . '(' formal_param_list ')' '{' var_decl_list statement_list '}'
   22         | type NAME . '(' ')' '{' '}'
   23         | type NAME . '(' ')' '{' var_decl_list statement_list '}'
   24         | type NAME . '(' formal_param_list ')' '{' var_decl_list '}'
   25         | type NAME . '(' ')' '{' var_decl_list '}'

    '('  shift, and go to state 34


State 27

   12 func_decl: type NAME '(' . dummy_formal_param_list ')' ';'
   13          | type NAME '(' . ')' ';'
   14          | type NAME '(' . formal_param_list ')' ';'
   20 func_def: type NAME '(' . formal_param_list ')' '{' '}'
   21         | type NAME '(' . formal_param_list ')' '{' var_decl_list statement_list '}'
   22         | type NAME '(' . ')' '{' '}'
   23         | type NAME '(' . ')' '{' var_decl_list statement_list '}'
   24         | type NAME '(' . formal_param_list ')' '{' var_decl_list '}'
   25         | type NAME '(' . ')' '{' var_decl_list '}'

    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    BOOL     shift, and go to state 37
    ')'      shift, and go to state 38

    dummy_formal_param_list  go to state 39
    dummy_formal_param       go to state 40
    formal_param_list        go to state 41
    formal_param             go to state 42
    param_type               go to state 43


State 28

   53 var_decl: type variables_list ';' .

    $default  reduce using rule 53 (var_decl)


State 29

   61 variables_list: variables_list ',' . NAME

    NAME  shift, and go to state 44


State 30

   11 access_specifier_type: PRIVATE .

    $default  reduce using rule 11 (access_specifier_type)


State 31

   10 access_specifier_type: PUBLIC .

    $default  reduce using rule 10 (access_specifier_type)


State 32

    8 class_declaration_stat: CLASS NAME '{' block . '}' ';'

    '}'  shift, and go to state 45


State 33

    9 block: access_specifier_type . ':' global_decl_statement

    ':'  shift, and go to state 46


State 34

   20 func_def: type NAME '(' . formal_param_list ')' '{' '}'
   21         | type NAME '(' . formal_param_list ')' '{' var_decl_list statement_list '}'
   22         | type NAME '(' . ')' '{' '}'
   23         | type NAME '(' . ')' '{' var_decl_list statement_list '}'
   24         | type NAME '(' . formal_param_list ')' '{' var_decl_list '}'
   25         | type NAME '(' . ')' '{' var_decl_list '}'

    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    BOOL     shift, and go to state 37
    ')'      shift, and go to state 47

    formal_param_list  go to state 48
    formal_param       go to state 42
    param_type         go to state 49


State 35

   29 param_type: INTEGER .

    $default  reduce using rule 29 (param_type)


State 36

   30 param_type: FLOAT .

    $default  reduce using rule 30 (param_type)


State 37

   31 param_type: BOOL .

    $default  reduce using rule 31 (param_type)


State 38

   13 func_decl: type NAME '(' ')' . ';'
   22 func_def: type NAME '(' ')' . '{' '}'
   23         | type NAME '(' ')' . '{' var_decl_list statement_list '}'
   25         | type NAME '(' ')' . '{' var_decl_list '}'

    '{'  shift, and go to state 50
    ';'  shift, and go to state 51


State 39

   12 func_decl: type NAME '(' dummy_formal_param_list . ')' ';'
   15 dummy_formal_param_list: dummy_formal_param_list . ',' dummy_formal_param

    ')'  shift, and go to state 52
    ','  shift, and go to state 53


State 40

   16 dummy_formal_param_list: dummy_formal_param .

    $default  reduce using rule 16 (dummy_formal_param_list)


State 41

   14 func_decl: type NAME '(' formal_param_list . ')' ';'
   20 func_def: type NAME '(' formal_param_list . ')' '{' '}'
   21         | type NAME '(' formal_param_list . ')' '{' var_decl_list statement_list '}'
   24         | type NAME '(' formal_param_list . ')' '{' var_decl_list '}'
   26 formal_param_list: formal_param_list . ',' formal_param

    ')'  shift, and go to state 54
    ','  shift, and go to state 55


State 42

   27 formal_param_list: formal_param .

    $default  reduce using rule 27 (formal_param_list)


State 43

   17 dummy_formal_param: param_type .
   28 formal_param: param_type . NAME

    NAME  shift, and go to state 56

    $default  reduce using rule 17 (dummy_formal_param)


State 44

   61 variables_list: variables_list ',' NAME .

    $default  reduce using rule 61 (variables_list)


State 45

    8 class_declaration_stat: CLASS NAME '{' block '}' . ';'

    ';'  shift, and go to state 57


State 46

    9 block: access_specifier_type ':' . global_decl_statement

    CLASS    shift, and go to state 1
    NAME     shift, and go to state 2
    INTEGER  shift, and go to state 3
    FLOAT    shift, and go to state 4
    STRING   shift, and go to state 5
    BOOL     shift, and go to state 6
    VOID     shift, and go to state 7

    global_decl_statement   go to state 58
    class_declaration_stat  go to state 10
    func_decl               go to state 11
    var_decl                go to state 14
    type                    go to state 59


State 47

   22 func_def: type NAME '(' ')' . '{' '}'
   23         | type NAME '(' ')' . '{' var_decl_list statement_list '}'
   25         | type NAME '(' ')' . '{' var_decl_list '}'

    '{'  shift, and go to state 50


State 48

   20 func_def: type NAME '(' formal_param_list . ')' '{' '}'
   21         | type NAME '(' formal_param_list . ')' '{' var_decl_list statement_list '}'
   24         | type NAME '(' formal_param_list . ')' '{' var_decl_list '}'
   26 formal_param_list: formal_param_list . ',' formal_param

    ')'  shift, and go to state 60
    ','  shift, and go to state 55


State 49

   28 formal_param: param_type . NAME

    NAME  shift, and go to state 56


State 50

   22 func_def: type NAME '(' ')' '{' . '}'
   23         | type NAME '(' ')' '{' . var_decl_list statement_list '}'
   25         | type NAME '(' ')' '{' . var_decl_list '}'

    NAME     shift, and go to state 2
    INTEGER  shift, and go to state 3
    FLOAT    shift, and go to state 4
    STRING   shift, and go to state 5
    BOOL     shift, and go to state 6
    VOID     shift, and go to state 7
    '}'      shift, and go to state 61

    var_decl_list  go to state 62
    var_decl       go to state 63
    type           go to state 64


State 51

   13 func_decl: type NAME '(' ')' ';' .

    $default  reduce using rule 13 (func_decl)


State 52

   12 func_decl: type NAME '(' dummy_formal_param_list ')' . ';'

    ';'  shift, and go to state 65


State 53

   15 dummy_formal_param_list: dummy_formal_param_list ',' . dummy_formal_param

    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    BOOL     shift, and go to state 37

    dummy_formal_param  go to state 66
    param_type          go to state 67


State 54

   14 func_decl: type NAME '(' formal_param_list ')' . ';'
   20 func_def: type NAME '(' formal_param_list ')' . '{' '}'
   21         | type NAME '(' formal_param_list ')' . '{' var_decl_list statement_list '}'
   24         | type NAME '(' formal_param_list ')' . '{' var_decl_list '}'

    '{'  shift, and go to state 68
    ';'  shift, and go to state 69


State 55

   26 formal_param_list: formal_param_list ',' . formal_param

    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    BOOL     shift, and go to state 37

    formal_param  go to state 70
    param_type    go to state 49


State 56

   28 formal_param: param_type NAME .

    $default  reduce using rule 28 (formal_param)


State 57

    8 class_declaration_stat: CLASS NAME '{' block '}' ';' .

    $default  reduce using rule 8 (class_declaration_stat)


State 58

    3 global_decl_statement: global_decl_statement . func_decl
    4                      | global_decl_statement . var_decl
    9 block: access_specifier_type ':' global_decl_statement .

    NAME     shift, and go to state 2
    INTEGER  shift, and go to state 3
    FLOAT    shift, and go to state 4
    STRING   shift, and go to state 5
    BOOL     shift, and go to state 6
    VOID     shift, and go to state 7

    $default  reduce using rule 9 (block)

    func_decl  go to state 18
    var_decl   go to state 20
    type       go to state 59


State 59

   12 func_decl: type . NAME '(' dummy_formal_param_list ')' ';'
   13          | type . NAME '(' ')' ';'
   14          | type . NAME '(' formal_param_list ')' ';'
   53 var_decl: type . variables_list ';'

    NAME  shift, and go to state 71

    variables_list  go to state 24


State 60

   20 func_def: type NAME '(' formal_param_list ')' . '{' '}'
   21         | type NAME '(' formal_param_list ')' . '{' var_decl_list statement_list '}'
   24         | type NAME '(' formal_param_list ')' . '{' var_decl_list '}'

    '{'  shift, and go to state 68


State 61

   22 func_def: type NAME '(' ')' '{' '}' .

    $default  reduce using rule 22 (func_def)


State 62

   23 func_def: type NAME '(' ')' '{' var_decl_list . statement_list '}'
   25         | type NAME '(' ')' '{' var_decl_list . '}'
   52 var_decl_list: var_decl_list . var_decl

    NAME     shift, and go to state 72
    INTEGER  shift, and go to state 3
    FLOAT    shift, and go to state 4
    STRING   shift, and go to state 5
    BOOL     shift, and go to state 6
    VOID     shift, and go to state 7
    IF       shift, and go to state 73
    WHILE    shift, and go to state 74
    DO       shift, and go to state 75
    WRITE    shift, and go to state 76
    READ     shift, and go to state 77
    RETURN   shift, and go to state 78
    '{'      shift, and go to state 79
    '}'      shift, and go to state 80

    statement_list        go to state 81
    statement             go to state 82
    call_statement        go to state 83
    func_call             go to state 84
    return_statement      go to state 85
    var_decl              go to state 86
    type                  go to state 64
    assignment_statement  go to state 87
    if_statement          go to state 88
    do_while_statement    go to state 89
    while_statement       go to state 90
    compound_statement    go to state 91
    print_statement       go to state 92
    read_statement        go to state 93
    variable              go to state 94


State 63

   51 var_decl_list: var_decl .

    $default  reduce using rule 51 (var_decl_list)


State 64

   53 var_decl: type . variables_list ';'

    NAME  shift, and go to state 95

    variables_list  go to state 24


State 65

   12 func_decl: type NAME '(' dummy_formal_param_list ')' ';' .

    $default  reduce using rule 12 (func_decl)


State 66

   15 dummy_formal_param_list: dummy_formal_param_list ',' dummy_formal_param .

    $default  reduce using rule 15 (dummy_formal_param_list)


State 67

   17 dummy_formal_param: param_type .

    $default  reduce using rule 17 (dummy_formal_param)


State 68

   20 func_def: type NAME '(' formal_param_list ')' '{' . '}'
   21         | type NAME '(' formal_param_list ')' '{' . var_decl_list statement_list '}'
   24         | type NAME '(' formal_param_list ')' '{' . var_decl_list '}'

    NAME     shift, and go to state 2
    INTEGER  shift, and go to state 3
    FLOAT    shift, and go to state 4
    STRING   shift, and go to state 5
    BOOL     shift, and go to state 6
    VOID     shift, and go to state 7
    '}'      shift, and go to state 96

    var_decl_list  go to state 97
    var_decl       go to state 63
    type           go to state 64


State 69

   14 func_decl: type NAME '(' formal_param_list ')' ';' .

    $default  reduce using rule 14 (func_decl)


State 70

   26 formal_param_list: formal_param_list ',' formal_param .

    $default  reduce using rule 26 (formal_param_list)


State 71

   12 func_decl: type NAME . '(' dummy_formal_param_list ')' ';'
   13          | type NAME . '(' ')' ';'
   14          | type NAME . '(' formal_param_list ')' ';'
   60 variables_list: NAME .

    '('  shift, and go to state 98

    $default  reduce using rule 60 (variables_list)


State 72

   44 func_call: NAME . '(' non_empty_arg_list ')'
   45          | NAME . '(' ')'
   59 type: NAME .
   97 variable: NAME .

    '('  shift, and go to state 99

    ASSIGN    reduce using rule 97 (variable)
    $default  reduce using rule 59 (type)


State 73

   65 if_statement: IF . '(' logical_expression ')' statement ELSE statement
   66             | IF . '(' logical_expression ')' statement

    '('  shift, and go to state 100


State 74

   68 while_statement: WHILE . '(' logical_expression ')' statement

    '('  shift, and go to state 101


State 75

   67 do_while_statement: DO . statement WHILE '(' logical_expression ')' ';'

    NAME    shift, and go to state 102
    IF      shift, and go to state 73
    WHILE   shift, and go to state 74
    DO      shift, and go to state 75
    WRITE   shift, and go to state 76
    READ    shift, and go to state 77
    RETURN  shift, and go to state 78
    '{'     shift, and go to state 79

    statement             go to state 103
    call_statement        go to state 83
    func_call             go to state 84
    return_statement      go to state 85
    assignment_statement  go to state 87
    if_statement          go to state 88
    do_while_statement    go to state 89
    while_statement       go to state 90
    compound_statement    go to state 91
    print_statement       go to state 92
    read_statement        go to state 93
    variable              go to state 94


State 76

   71 print_statement: WRITE . variable ';'
   72                | WRITE . STRING_CONSTANT ';'

    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 105

    variable  go to state 106


State 77

   73 read_statement: READ . variable ';'

    NAME  shift, and go to state 104

    variable  go to state 107


State 78

   49 return_statement: RETURN . ';'
   50                 | RETURN . arith_expression ';'

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114
    ';'              shift, and go to state 115

    arith_expression    go to state 116
    operand             go to state 117
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 120
    variable            go to state 121
    constant            go to state 122


State 79

   69 compound_statement: '{' . statement_list '}'
   70                   | '{' . '}'

    NAME    shift, and go to state 102
    IF      shift, and go to state 73
    WHILE   shift, and go to state 74
    DO      shift, and go to state 75
    WRITE   shift, and go to state 76
    READ    shift, and go to state 77
    RETURN  shift, and go to state 78
    '{'     shift, and go to state 79
    '}'     shift, and go to state 123

    statement_list        go to state 124
    statement             go to state 82
    call_statement        go to state 83
    func_call             go to state 84
    return_statement      go to state 85
    assignment_statement  go to state 87
    if_statement          go to state 88
    do_while_statement    go to state 89
    while_statement       go to state 90
    compound_statement    go to state 91
    print_statement       go to state 92
    read_statement        go to state 93
    variable              go to state 94


State 80

   25 func_def: type NAME '(' ')' '{' var_decl_list '}' .

    $default  reduce using rule 25 (func_def)


State 81

   23 func_def: type NAME '(' ')' '{' var_decl_list statement_list . '}'
   32 statement_list: statement_list . statement

    NAME    shift, and go to state 102
    IF      shift, and go to state 73
    WHILE   shift, and go to state 74
    DO      shift, and go to state 75
    WRITE   shift, and go to state 76
    READ    shift, and go to state 77
    RETURN  shift, and go to state 78
    '{'     shift, and go to state 79
    '}'     shift, and go to state 125

    statement             go to state 126
    call_statement        go to state 83
    func_call             go to state 84
    return_statement      go to state 85
    assignment_statement  go to state 87
    if_statement          go to state 88
    do_while_statement    go to state 89
    while_statement       go to state 90
    compound_statement    go to state 91
    print_statement       go to state 92
    read_statement        go to state 93
    variable              go to state 94


State 82

   33 statement_list: statement .

    $default  reduce using rule 33 (statement_list)


State 83

   41 statement: call_statement .

    $default  reduce using rule 41 (statement)


State 84

   43 call_statement: func_call . ';'

    ';'  shift, and go to state 127


State 85

   42 statement: return_statement .

    $default  reduce using rule 42 (statement)


State 86

   52 var_decl_list: var_decl_list var_decl .

    $default  reduce using rule 52 (var_decl_list)


State 87

   34 statement: assignment_statement .

    $default  reduce using rule 34 (statement)


State 88

   35 statement: if_statement .

    $default  reduce using rule 35 (statement)


State 89

   36 statement: do_while_statement .

    $default  reduce using rule 36 (statement)


State 90

   37 statement: while_statement .

    $default  reduce using rule 37 (statement)


State 91

   38 statement: compound_statement .

    $default  reduce using rule 38 (statement)


State 92

   39 statement: print_statement .

    $default  reduce using rule 39 (statement)


State 93

   40 statement: read_statement .

    $default  reduce using rule 40 (statement)


State 94

   62 assignment_statement: variable . ASSIGN arith_expression ';'
   63                     | variable . ASSIGN func_call ';'
   64                     | variable . ASSIGN logical_expression ';'

    ASSIGN  shift, and go to state 128


State 95

   60 variables_list: NAME .

    $default  reduce using rule 60 (variables_list)


State 96

   20 func_def: type NAME '(' formal_param_list ')' '{' '}' .

    $default  reduce using rule 20 (func_def)


State 97

   21 func_def: type NAME '(' formal_param_list ')' '{' var_decl_list . statement_list '}'
   24         | type NAME '(' formal_param_list ')' '{' var_decl_list . '}'
   52 var_decl_list: var_decl_list . var_decl

    NAME     shift, and go to state 72
    INTEGER  shift, and go to state 3
    FLOAT    shift, and go to state 4
    STRING   shift, and go to state 5
    BOOL     shift, and go to state 6
    VOID     shift, and go to state 7
    IF       shift, and go to state 73
    WHILE    shift, and go to state 74
    DO       shift, and go to state 75
    WRITE    shift, and go to state 76
    READ     shift, and go to state 77
    RETURN   shift, and go to state 78
    '{'      shift, and go to state 79
    '}'      shift, and go to state 129

    statement_list        go to state 130
    statement             go to state 82
    call_statement        go to state 83
    func_call             go to state 84
    return_statement      go to state 85
    var_decl              go to state 86
    type                  go to state 64
    assignment_statement  go to state 87
    if_statement          go to state 88
    do_while_statement    go to state 89
    while_statement       go to state 90
    compound_statement    go to state 91
    print_statement       go to state 92
    read_statement        go to state 93
    variable              go to state 94


State 98

   12 func_decl: type NAME '(' . dummy_formal_param_list ')' ';'
   13          | type NAME '(' . ')' ';'
   14          | type NAME '(' . formal_param_list ')' ';'

    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    BOOL     shift, and go to state 37
    ')'      shift, and go to state 131

    dummy_formal_param_list  go to state 39
    dummy_formal_param       go to state 40
    formal_param_list        go to state 132
    formal_param             go to state 42
    param_type               go to state 43


State 99

   44 func_call: NAME '(' . non_empty_arg_list ')'
   45          | NAME '(' . ')'

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114
    ')'              shift, and go to state 133

    non_empty_arg_list  go to state 134
    actual_arg          go to state 135
    arith_expression    go to state 136
    operand             go to state 117
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 120
    variable            go to state 121
    constant            go to state 122


State 100

   65 if_statement: IF '(' . logical_expression ')' statement ELSE statement
   66             | IF '(' . logical_expression ')' statement

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 117
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 138
    variable            go to state 121
    constant            go to state 122


State 101

   68 while_statement: WHILE '(' . logical_expression ')' statement

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 117
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 139
    variable            go to state 121
    constant            go to state 122


State 102

   44 func_call: NAME . '(' non_empty_arg_list ')'
   45          | NAME . '(' ')'
   97 variable: NAME .

    '('  shift, and go to state 99

    $default  reduce using rule 97 (variable)


State 103

   67 do_while_statement: DO statement . WHILE '(' logical_expression ')' ';'

    WHILE  shift, and go to state 140


State 104

   97 variable: NAME .

    $default  reduce using rule 97 (variable)


State 105

   72 print_statement: WRITE STRING_CONSTANT . ';'

    ';'  shift, and go to state 141


State 106

   71 print_statement: WRITE variable . ';'

    ';'  shift, and go to state 142


State 107

   73 read_statement: READ variable . ';'

    ';'  shift, and go to state 143


State 108

   98 constant: INTEGER_NUMBER .

    $default  reduce using rule 98 (constant)


State 109

   99 constant: DOUBLE_NUMBER .

    $default  reduce using rule 99 (constant)


State 110

  100 constant: STRING_CONSTANT .

    $default  reduce using rule 100 (constant)


State 111

   96 logical_expression: AT . variable

    NAME  shift, and go to state 104

    variable  go to state 144


State 112

   78 arith_expression: '-' . operand

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 145
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 120
    variable            go to state 121
    constant            go to state 122


State 113

   93 logical_expression: NOT . logical_expression

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 117
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 146
    variable            go to state 121
    constant            go to state 122


State 114

   79 arith_expression: '(' . operand ')'
   94 logical_expression: '(' . logical_expression ')'

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 147
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 148
    variable            go to state 121
    constant            go to state 122


State 115

   49 return_statement: RETURN ';' .

    $default  reduce using rule 49 (return_statement)


State 116

   50 return_statement: RETURN arith_expression . ';'
   82 operand: arith_expression .

    ';'  shift, and go to state 149

    $default  reduce using rule 82 (operand)


State 117

   74 arith_expression: operand . '+' operand
   75                 | operand . '-' operand
   76                 | operand . '*' operand
   77                 | operand . '/' operand
   85 rel_expression: operand . LT operand
   86               | operand . LE operand
   87               | operand . GT operand
   88               | operand . GE operand
   89               | operand . NE operand
   90               | operand . EQ operand

    NE   shift, and go to state 150
    EQ   shift, and go to state 151
    LT   shift, and go to state 152
    LE   shift, and go to state 153
    GT   shift, and go to state 154
    GE   shift, and go to state 155
    '+'  shift, and go to state 156
    '-'  shift, and go to state 157
    '*'  shift, and go to state 158
    '/'  shift, and go to state 159


State 118

   81 arith_expression: expression_term .

    $default  reduce using rule 81 (arith_expression)


State 119

   95 logical_expression: rel_expression .

    $default  reduce using rule 95 (logical_expression)


State 120

   80 arith_expression: logical_expression . '?' operand ':' operand
   91 logical_expression: logical_expression . AND logical_expression
   92                   | logical_expression . OR logical_expression

    '?'  shift, and go to state 160
    OR   shift, and go to state 161
    AND  shift, and go to state 162


State 121

   83 expression_term: variable .

    $default  reduce using rule 83 (expression_term)


State 122

   84 expression_term: constant .

    $default  reduce using rule 84 (expression_term)


State 123

   70 compound_statement: '{' '}' .

    $default  reduce using rule 70 (compound_statement)


State 124

   32 statement_list: statement_list . statement
   69 compound_statement: '{' statement_list . '}'

    NAME    shift, and go to state 102
    IF      shift, and go to state 73
    WHILE   shift, and go to state 74
    DO      shift, and go to state 75
    WRITE   shift, and go to state 76
    READ    shift, and go to state 77
    RETURN  shift, and go to state 78
    '{'     shift, and go to state 79
    '}'     shift, and go to state 163

    statement             go to state 126
    call_statement        go to state 83
    func_call             go to state 84
    return_statement      go to state 85
    assignment_statement  go to state 87
    if_statement          go to state 88
    do_while_statement    go to state 89
    while_statement       go to state 90
    compound_statement    go to state 91
    print_statement       go to state 92
    read_statement        go to state 93
    variable              go to state 94


State 125

   23 func_def: type NAME '(' ')' '{' var_decl_list statement_list '}' .

    $default  reduce using rule 23 (func_def)


State 126

   32 statement_list: statement_list statement .

    $default  reduce using rule 32 (statement_list)


State 127

   43 call_statement: func_call ';' .

    $default  reduce using rule 43 (call_statement)


State 128

   62 assignment_statement: variable ASSIGN . arith_expression ';'
   63                     | variable ASSIGN . func_call ';'
   64                     | variable ASSIGN . logical_expression ';'

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 102
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    func_call           go to state 164
    arith_expression    go to state 165
    operand             go to state 117
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 166
    variable            go to state 121
    constant            go to state 122


State 129

   24 func_def: type NAME '(' formal_param_list ')' '{' var_decl_list '}' .

    $default  reduce using rule 24 (func_def)


State 130

   21 func_def: type NAME '(' formal_param_list ')' '{' var_decl_list statement_list . '}'
   32 statement_list: statement_list . statement

    NAME    shift, and go to state 102
    IF      shift, and go to state 73
    WHILE   shift, and go to state 74
    DO      shift, and go to state 75
    WRITE   shift, and go to state 76
    READ    shift, and go to state 77
    RETURN  shift, and go to state 78
    '{'     shift, and go to state 79
    '}'     shift, and go to state 167

    statement             go to state 126
    call_statement        go to state 83
    func_call             go to state 84
    return_statement      go to state 85
    assignment_statement  go to state 87
    if_statement          go to state 88
    do_while_statement    go to state 89
    while_statement       go to state 90
    compound_statement    go to state 91
    print_statement       go to state 92
    read_statement        go to state 93
    variable              go to state 94


State 131

   13 func_decl: type NAME '(' ')' . ';'

    ';'  shift, and go to state 51


State 132

   14 func_decl: type NAME '(' formal_param_list . ')' ';'
   26 formal_param_list: formal_param_list . ',' formal_param

    ')'  shift, and go to state 168
    ','  shift, and go to state 55


State 133

   45 func_call: NAME '(' ')' .

    $default  reduce using rule 45 (func_call)


State 134

   44 func_call: NAME '(' non_empty_arg_list . ')'
   46 non_empty_arg_list: non_empty_arg_list . ',' actual_arg

    ')'  shift, and go to state 169
    ','  shift, and go to state 170


State 135

   47 non_empty_arg_list: actual_arg .

    $default  reduce using rule 47 (non_empty_arg_list)


State 136

   48 actual_arg: arith_expression .
   82 operand: arith_expression .

    ')'       reduce using rule 48 (actual_arg)
    ','       reduce using rule 48 (actual_arg)
    $default  reduce using rule 82 (operand)


State 137

   82 operand: arith_expression .

    $default  reduce using rule 82 (operand)


State 138

   65 if_statement: IF '(' logical_expression . ')' statement ELSE statement
   66             | IF '(' logical_expression . ')' statement
   80 arith_expression: logical_expression . '?' operand ':' operand
   91 logical_expression: logical_expression . AND logical_expression
   92                   | logical_expression . OR logical_expression

    '?'  shift, and go to state 160
    OR   shift, and go to state 161
    AND  shift, and go to state 162
    ')'  shift, and go to state 171


State 139

   68 while_statement: WHILE '(' logical_expression . ')' statement
   80 arith_expression: logical_expression . '?' operand ':' operand
   91 logical_expression: logical_expression . AND logical_expression
   92                   | logical_expression . OR logical_expression

    '?'  shift, and go to state 160
    OR   shift, and go to state 161
    AND  shift, and go to state 162
    ')'  shift, and go to state 172


State 140

   67 do_while_statement: DO statement WHILE . '(' logical_expression ')' ';'

    '('  shift, and go to state 173


State 141

   72 print_statement: WRITE STRING_CONSTANT ';' .

    $default  reduce using rule 72 (print_statement)


State 142

   71 print_statement: WRITE variable ';' .

    $default  reduce using rule 71 (print_statement)


State 143

   73 read_statement: READ variable ';' .

    $default  reduce using rule 73 (read_statement)


State 144

   96 logical_expression: AT variable .

    $default  reduce using rule 96 (logical_expression)


State 145

   74 arith_expression: operand . '+' operand
   75                 | operand . '-' operand
   76                 | operand . '*' operand
   77                 | operand . '/' operand
   78                 | '-' operand .
   85 rel_expression: operand . LT operand
   86               | operand . LE operand
   87               | operand . GT operand
   88               | operand . GE operand
   89               | operand . NE operand
   90               | operand . EQ operand

    $default  reduce using rule 78 (arith_expression)


State 146

   80 arith_expression: logical_expression . '?' operand ':' operand
   91 logical_expression: logical_expression . AND logical_expression
   92                   | logical_expression . OR logical_expression
   93                   | NOT logical_expression .

    $default  reduce using rule 93 (logical_expression)


State 147

   74 arith_expression: operand . '+' operand
   75                 | operand . '-' operand
   76                 | operand . '*' operand
   77                 | operand . '/' operand
   79                 | '(' operand . ')'
   85 rel_expression: operand . LT operand
   86               | operand . LE operand
   87               | operand . GT operand
   88               | operand . GE operand
   89               | operand . NE operand
   90               | operand . EQ operand

    NE   shift, and go to state 150
    EQ   shift, and go to state 151
    LT   shift, and go to state 152
    LE   shift, and go to state 153
    GT   shift, and go to state 154
    GE   shift, and go to state 155
    '+'  shift, and go to state 156
    '-'  shift, and go to state 157
    '*'  shift, and go to state 158
    '/'  shift, and go to state 159
    ')'  shift, and go to state 174


State 148

   80 arith_expression: logical_expression . '?' operand ':' operand
   91 logical_expression: logical_expression . AND logical_expression
   92                   | logical_expression . OR logical_expression
   94                   | '(' logical_expression . ')'

    '?'  shift, and go to state 160
    OR   shift, and go to state 161
    AND  shift, and go to state 162
    ')'  shift, and go to state 175


State 149

   50 return_statement: RETURN arith_expression ';' .

    $default  reduce using rule 50 (return_statement)


State 150

   89 rel_expression: operand NE . operand

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 176
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 120
    variable            go to state 121
    constant            go to state 122


State 151

   90 rel_expression: operand EQ . operand

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 177
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 120
    variable            go to state 121
    constant            go to state 122


State 152

   85 rel_expression: operand LT . operand

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 178
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 120
    variable            go to state 121
    constant            go to state 122


State 153

   86 rel_expression: operand LE . operand

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 179
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 120
    variable            go to state 121
    constant            go to state 122


State 154

   87 rel_expression: operand GT . operand

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 180
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 120
    variable            go to state 121
    constant            go to state 122


State 155

   88 rel_expression: operand GE . operand

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 181
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 120
    variable            go to state 121
    constant            go to state 122


State 156

   74 arith_expression: operand '+' . operand

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 182
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 120
    variable            go to state 121
    constant            go to state 122


State 157

   75 arith_expression: operand '-' . operand

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 183
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 120
    variable            go to state 121
    constant            go to state 122


State 158

   76 arith_expression: operand '*' . operand

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 184
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 120
    variable            go to state 121
    constant            go to state 122


State 159

   77 arith_expression: operand '/' . operand

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 185
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 120
    variable            go to state 121
    constant            go to state 122


State 160

   80 arith_expression: logical_expression '?' . operand ':' operand

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 186
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 120
    variable            go to state 121
    constant            go to state 122


State 161

   92 logical_expression: logical_expression OR . logical_expression

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 117
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 187
    variable            go to state 121
    constant            go to state 122


State 162

   91 logical_expression: logical_expression AND . logical_expression

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 117
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 188
    variable            go to state 121
    constant            go to state 122


State 163

   69 compound_statement: '{' statement_list '}' .

    $default  reduce using rule 69 (compound_statement)


State 164

   63 assignment_statement: variable ASSIGN func_call . ';'

    ';'  shift, and go to state 189


State 165

   62 assignment_statement: variable ASSIGN arith_expression . ';'
   82 operand: arith_expression .

    ';'  shift, and go to state 190

    $default  reduce using rule 82 (operand)


State 166

   64 assignment_statement: variable ASSIGN logical_expression . ';'
   80 arith_expression: logical_expression . '?' operand ':' operand
   91 logical_expression: logical_expression . AND logical_expression
   92                   | logical_expression . OR logical_expression

    '?'  shift, and go to state 160
    OR   shift, and go to state 161
    AND  shift, and go to state 162
    ';'  shift, and go to state 191


State 167

   21 func_def: type NAME '(' formal_param_list ')' '{' var_decl_list statement_list '}' .

    $default  reduce using rule 21 (func_def)


State 168

   14 func_decl: type NAME '(' formal_param_list ')' . ';'

    ';'  shift, and go to state 69


State 169

   44 func_call: NAME '(' non_empty_arg_list ')' .

    $default  reduce using rule 44 (func_call)


State 170

   46 non_empty_arg_list: non_empty_arg_list ',' . actual_arg

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    actual_arg          go to state 192
    arith_expression    go to state 136
    operand             go to state 117
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 120
    variable            go to state 121
    constant            go to state 122


State 171

   65 if_statement: IF '(' logical_expression ')' . statement ELSE statement
   66             | IF '(' logical_expression ')' . statement

    NAME    shift, and go to state 102
    IF      shift, and go to state 73
    WHILE   shift, and go to state 74
    DO      shift, and go to state 75
    WRITE   shift, and go to state 76
    READ    shift, and go to state 77
    RETURN  shift, and go to state 78
    '{'     shift, and go to state 79

    statement             go to state 193
    call_statement        go to state 83
    func_call             go to state 84
    return_statement      go to state 85
    assignment_statement  go to state 87
    if_statement          go to state 88
    do_while_statement    go to state 89
    while_statement       go to state 90
    compound_statement    go to state 91
    print_statement       go to state 92
    read_statement        go to state 93
    variable              go to state 94


State 172

   68 while_statement: WHILE '(' logical_expression ')' . statement

    NAME    shift, and go to state 102
    IF      shift, and go to state 73
    WHILE   shift, and go to state 74
    DO      shift, and go to state 75
    WRITE   shift, and go to state 76
    READ    shift, and go to state 77
    RETURN  shift, and go to state 78
    '{'     shift, and go to state 79

    statement             go to state 194
    call_statement        go to state 83
    func_call             go to state 84
    return_statement      go to state 85
    assignment_statement  go to state 87
    if_statement          go to state 88
    do_while_statement    go to state 89
    while_statement       go to state 90
    compound_statement    go to state 91
    print_statement       go to state 92
    read_statement        go to state 93
    variable              go to state 94


State 173

   67 do_while_statement: DO statement WHILE '(' . logical_expression ')' ';'

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 117
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 195
    variable            go to state 121
    constant            go to state 122


State 174

   79 arith_expression: '(' operand ')' .

    $default  reduce using rule 79 (arith_expression)


State 175

   94 logical_expression: '(' logical_expression ')' .

    $default  reduce using rule 94 (logical_expression)


State 176

   74 arith_expression: operand . '+' operand
   75                 | operand . '-' operand
   76                 | operand . '*' operand
   77                 | operand . '/' operand
   85 rel_expression: operand . LT operand
   86               | operand . LE operand
   87               | operand . GT operand
   88               | operand . GE operand
   89               | operand . NE operand
   89               | operand NE operand .
   90               | operand . EQ operand

    NE   shift, and go to state 150
    EQ   shift, and go to state 151
    LT   shift, and go to state 152
    LE   shift, and go to state 153
    GT   shift, and go to state 154
    GE   shift, and go to state 155
    '+'  shift, and go to state 156
    '-'  shift, and go to state 157
    '*'  shift, and go to state 158
    '/'  shift, and go to state 159

    $default  reduce using rule 89 (rel_expression)


State 177

   74 arith_expression: operand . '+' operand
   75                 | operand . '-' operand
   76                 | operand . '*' operand
   77                 | operand . '/' operand
   85 rel_expression: operand . LT operand
   86               | operand . LE operand
   87               | operand . GT operand
   88               | operand . GE operand
   89               | operand . NE operand
   90               | operand . EQ operand
   90               | operand EQ operand .

    NE   shift, and go to state 150
    EQ   shift, and go to state 151
    LT   shift, and go to state 152
    LE   shift, and go to state 153
    GT   shift, and go to state 154
    GE   shift, and go to state 155
    '+'  shift, and go to state 156
    '-'  shift, and go to state 157
    '*'  shift, and go to state 158
    '/'  shift, and go to state 159

    $default  reduce using rule 90 (rel_expression)


State 178

   74 arith_expression: operand . '+' operand
   75                 | operand . '-' operand
   76                 | operand . '*' operand
   77                 | operand . '/' operand
   85 rel_expression: operand . LT operand
   85               | operand LT operand .
   86               | operand . LE operand
   87               | operand . GT operand
   88               | operand . GE operand
   89               | operand . NE operand
   90               | operand . EQ operand

    NE   shift, and go to state 150
    EQ   shift, and go to state 151
    LT   shift, and go to state 152
    LE   shift, and go to state 153
    GT   shift, and go to state 154
    GE   shift, and go to state 155
    '+'  shift, and go to state 156
    '-'  shift, and go to state 157
    '*'  shift, and go to state 158
    '/'  shift, and go to state 159

    $default  reduce using rule 85 (rel_expression)


State 179

   74 arith_expression: operand . '+' operand
   75                 | operand . '-' operand
   76                 | operand . '*' operand
   77                 | operand . '/' operand
   85 rel_expression: operand . LT operand
   86               | operand . LE operand
   86               | operand LE operand .
   87               | operand . GT operand
   88               | operand . GE operand
   89               | operand . NE operand
   90               | operand . EQ operand

    NE   shift, and go to state 150
    EQ   shift, and go to state 151
    LT   shift, and go to state 152
    LE   shift, and go to state 153
    GT   shift, and go to state 154
    GE   shift, and go to state 155
    '+'  shift, and go to state 156
    '-'  shift, and go to state 157
    '*'  shift, and go to state 158
    '/'  shift, and go to state 159

    $default  reduce using rule 86 (rel_expression)


State 180

   74 arith_expression: operand . '+' operand
   75                 | operand . '-' operand
   76                 | operand . '*' operand
   77                 | operand . '/' operand
   85 rel_expression: operand . LT operand
   86               | operand . LE operand
   87               | operand . GT operand
   87               | operand GT operand .
   88               | operand . GE operand
   89               | operand . NE operand
   90               | operand . EQ operand

    NE   shift, and go to state 150
    EQ   shift, and go to state 151
    LT   shift, and go to state 152
    LE   shift, and go to state 153
    GT   shift, and go to state 154
    GE   shift, and go to state 155
    '+'  shift, and go to state 156
    '-'  shift, and go to state 157
    '*'  shift, and go to state 158
    '/'  shift, and go to state 159

    $default  reduce using rule 87 (rel_expression)


State 181

   74 arith_expression: operand . '+' operand
   75                 | operand . '-' operand
   76                 | operand . '*' operand
   77                 | operand . '/' operand
   85 rel_expression: operand . LT operand
   86               | operand . LE operand
   87               | operand . GT operand
   88               | operand . GE operand
   88               | operand GE operand .
   89               | operand . NE operand
   90               | operand . EQ operand

    NE   shift, and go to state 150
    EQ   shift, and go to state 151
    LT   shift, and go to state 152
    LE   shift, and go to state 153
    GT   shift, and go to state 154
    GE   shift, and go to state 155
    '+'  shift, and go to state 156
    '-'  shift, and go to state 157
    '*'  shift, and go to state 158
    '/'  shift, and go to state 159

    $default  reduce using rule 88 (rel_expression)


State 182

   74 arith_expression: operand . '+' operand
   74                 | operand '+' operand .
   75                 | operand . '-' operand
   76                 | operand . '*' operand
   77                 | operand . '/' operand
   85 rel_expression: operand . LT operand
   86               | operand . LE operand
   87               | operand . GT operand
   88               | operand . GE operand
   89               | operand . NE operand
   90               | operand . EQ operand

    '*'  shift, and go to state 158
    '/'  shift, and go to state 159

    $default  reduce using rule 74 (arith_expression)


State 183

   74 arith_expression: operand . '+' operand
   75                 | operand . '-' operand
   75                 | operand '-' operand .
   76                 | operand . '*' operand
   77                 | operand . '/' operand
   85 rel_expression: operand . LT operand
   86               | operand . LE operand
   87               | operand . GT operand
   88               | operand . GE operand
   89               | operand . NE operand
   90               | operand . EQ operand

    '*'  shift, and go to state 158
    '/'  shift, and go to state 159

    $default  reduce using rule 75 (arith_expression)


State 184

   74 arith_expression: operand . '+' operand
   75                 | operand . '-' operand
   76                 | operand . '*' operand
   76                 | operand '*' operand .
   77                 | operand . '/' operand
   85 rel_expression: operand . LT operand
   86               | operand . LE operand
   87               | operand . GT operand
   88               | operand . GE operand
   89               | operand . NE operand
   90               | operand . EQ operand

    $default  reduce using rule 76 (arith_expression)


State 185

   74 arith_expression: operand . '+' operand
   75                 | operand . '-' operand
   76                 | operand . '*' operand
   77                 | operand . '/' operand
   77                 | operand '/' operand .
   85 rel_expression: operand . LT operand
   86               | operand . LE operand
   87               | operand . GT operand
   88               | operand . GE operand
   89               | operand . NE operand
   90               | operand . EQ operand

    $default  reduce using rule 77 (arith_expression)


State 186

   74 arith_expression: operand . '+' operand
   75                 | operand . '-' operand
   76                 | operand . '*' operand
   77                 | operand . '/' operand
   80                 | logical_expression '?' operand . ':' operand
   85 rel_expression: operand . LT operand
   86               | operand . LE operand
   87               | operand . GT operand
   88               | operand . GE operand
   89               | operand . NE operand
   90               | operand . EQ operand

    ':'  shift, and go to state 196
    NE   shift, and go to state 150
    EQ   shift, and go to state 151
    LT   shift, and go to state 152
    LE   shift, and go to state 153
    GT   shift, and go to state 154
    GE   shift, and go to state 155
    '+'  shift, and go to state 156
    '-'  shift, and go to state 157
    '*'  shift, and go to state 158
    '/'  shift, and go to state 159


State 187

   80 arith_expression: logical_expression . '?' operand ':' operand
   91 logical_expression: logical_expression . AND logical_expression
   92                   | logical_expression . OR logical_expression
   92                   | logical_expression OR logical_expression .

    AND  shift, and go to state 162

    $default  reduce using rule 92 (logical_expression)


State 188

   80 arith_expression: logical_expression . '?' operand ':' operand
   91 logical_expression: logical_expression . AND logical_expression
   91                   | logical_expression AND logical_expression .
   92                   | logical_expression . OR logical_expression

    $default  reduce using rule 91 (logical_expression)


State 189

   63 assignment_statement: variable ASSIGN func_call ';' .

    $default  reduce using rule 63 (assignment_statement)


State 190

   62 assignment_statement: variable ASSIGN arith_expression ';' .

    $default  reduce using rule 62 (assignment_statement)


State 191

   64 assignment_statement: variable ASSIGN logical_expression ';' .

    $default  reduce using rule 64 (assignment_statement)


State 192

   46 non_empty_arg_list: non_empty_arg_list ',' actual_arg .

    $default  reduce using rule 46 (non_empty_arg_list)


State 193

   65 if_statement: IF '(' logical_expression ')' statement . ELSE statement
   66             | IF '(' logical_expression ')' statement .

    ELSE  shift, and go to state 197

    $default  reduce using rule 66 (if_statement)


State 194

   68 while_statement: WHILE '(' logical_expression ')' statement .

    $default  reduce using rule 68 (while_statement)


State 195

   67 do_while_statement: DO statement WHILE '(' logical_expression . ')' ';'
   80 arith_expression: logical_expression . '?' operand ':' operand
   91 logical_expression: logical_expression . AND logical_expression
   92                   | logical_expression . OR logical_expression

    '?'  shift, and go to state 160
    OR   shift, and go to state 161
    AND  shift, and go to state 162
    ')'  shift, and go to state 198


State 196

   80 arith_expression: logical_expression '?' operand ':' . operand

    INTEGER_NUMBER   shift, and go to state 108
    DOUBLE_NUMBER    shift, and go to state 109
    NAME             shift, and go to state 104
    STRING_CONSTANT  shift, and go to state 110
    AT               shift, and go to state 111
    '-'              shift, and go to state 112
    NOT              shift, and go to state 113
    '('              shift, and go to state 114

    arith_expression    go to state 137
    operand             go to state 199
    expression_term     go to state 118
    rel_expression      go to state 119
    logical_expression  go to state 120
    variable            go to state 121
    constant            go to state 122


State 197

   65 if_statement: IF '(' logical_expression ')' statement ELSE . statement

    NAME    shift, and go to state 102
    IF      shift, and go to state 73
    WHILE   shift, and go to state 74
    DO      shift, and go to state 75
    WRITE   shift, and go to state 76
    READ    shift, and go to state 77
    RETURN  shift, and go to state 78
    '{'     shift, and go to state 79

    statement             go to state 200
    call_statement        go to state 83
    func_call             go to state 84
    return_statement      go to state 85
    assignment_statement  go to state 87
    if_statement          go to state 88
    do_while_statement    go to state 89
    while_statement       go to state 90
    compound_statement    go to state 91
    print_statement       go to state 92
    read_statement        go to state 93
    variable              go to state 94


State 198

   67 do_while_statement: DO statement WHILE '(' logical_expression ')' . ';'

    ';'  shift, and go to state 201


State 199

   74 arith_expression: operand . '+' operand
   75                 | operand . '-' operand
   76                 | operand . '*' operand
   77                 | operand . '/' operand
   80                 | logical_expression '?' operand ':' operand .
   85 rel_expression: operand . LT operand
   86               | operand . LE operand
   87               | operand . GT operand
   88               | operand . GE operand
   89               | operand . NE operand
   90               | operand . EQ operand

    NE   shift, and go to state 150
    EQ   shift, and go to state 151
    LT   shift, and go to state 152
    LE   shift, and go to state 153
    GT   shift, and go to state 154
    GE   shift, and go to state 155
    '+'  shift, and go to state 156
    '-'  shift, and go to state 157
    '*'  shift, and go to state 158
    '/'  shift, and go to state 159

    $default  reduce using rule 80 (arith_expression)


State 200

   65 if_statement: IF '(' logical_expression ')' statement ELSE statement .

    $default  reduce using rule 65 (if_statement)


State 201

   67 do_while_statement: DO statement WHILE '(' logical_expression ')' ';' .

    $default  reduce using rule 67 (do_while_statement)
