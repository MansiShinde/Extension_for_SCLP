Program:
**PROCEDURE: main, Return Type: VOID
**BEGIN: Abstract Syntax Tree 
         Asgn:
           LHS (Name : a_<float>)
           RHS (Num : 2.30<float>)
         Asgn:
           LHS (Name : b_<float>)
           RHS (Num : 3.40<float>)
         Asgn:
           LHS (Name : c_<float>)
           RHS (Num : 4.50<float>)
         Asgn:
           LHS (Name : d_<float>)
           RHS (Num : 5.60<float>)
         Asgn:
           LHS (Name : e_<float>)
           RHS (Num : 6.70<float>)
         If: 
           Condition (
             Condition: AND<bool>
               L_Opd (
                 Condition: GE<bool>
                   L_Opd (Name : a_<float>)
                   R_Opd (
                     Arith: Plus<float>
                       L_Opd (Name : b_<float>)
                       R_Opd (Name : c_<float>)))
               R_Opd (
                 Condition: GT<bool>
                   L_Opd (Name : d_<float>)
                   R_Opd (
                     Arith: Div<float>
                       L_Opd (
                         Arith: Mult<float>
                           L_Opd (Name : e_<float>)
                           R_Opd (Name : d_<float>))
                       R_Opd (Name : c_<float>))))
           Then (
             Asgn:
               LHS (Name : a_<float>)
               RHS (
                 Arith: Div<float>
                   L_Opd (
                     Arith: Mult<float>
                       L_Opd (Name : a_<float>)
                       R_Opd (Name : d_<float>))
                   R_Opd (Name : e_<float>)))
           Else (
             Asgn:
               LHS (Name : e_<float>)
               RHS (
                 Arith: Plus<float>
                   L_Opd (Name : e_<float>)
                   R_Opd (Name : d_<float>)))
**END: Abstract Syntax Tree 
