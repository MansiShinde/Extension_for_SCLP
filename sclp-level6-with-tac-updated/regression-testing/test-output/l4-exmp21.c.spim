
	.text 			# The .text assembler directive indicates
	.globl main		# The following is the code (as oppose to data)
main:				# .globl makes main know to the 
				# outside of the program.
# Prologue begins 
	sw $ra, 0($sp)		# Save the return address
	sw $fp, -4($sp)		# Save the frame pointer
	sub $fp, $sp, 8		# Update the frame pointer

	sub $sp, $sp, 16		# Make space for the locals
# Prologue ends


Label2:    	

Label2:    	
	lw $v0, -8($fp)		# Source:i_
	li $t1, 10		# Source:10
	sgt $t0, $v0, $t1	# Result:temp0, Opd1:i_, Opd2:10
	xori $v0, $t0, 1
	bgtz $v0, Label5 
	lw $v0, -8($fp)		# Source:i_
	li $t1, 1		# Source:1
	add $t0, $v0, $t1	# Result:temp1, Opd1:i_, Opd2:1
	sw $t0, -8($fp)	# Dest: i_
	j Label2

Label5:    	
	lw $v0, -4($fp)		# Source:x_
	bgtz $v0, Label2 
	lw $v0, -8($fp)		# Source:i_
	li $t1, 3		# Source:3
	sub $t0, $v0, $t1	# Result:temp3, Opd1:i_, Opd2:3
	sw $t0, -8($fp)	# Dest: i_

# Epilogue Begins
epilogue_main:
	add $sp, $sp, 16
	lw $fp, -4($sp)  
	lw $ra, 0($sp)   
	jr        $31		# Jump back to the called procedure
# Epilogue Ends

