Program:
**PROCEDURE: main, Return Type: VOID
**BEGIN: Abstract Syntax Tree 
         Asgn:
            LHS (Name : a1_)
            RHS (Num : 1)
         Asgn:
            LHS (Name : a2_)
            RHS (Num : 1)
         Asgn:
            LHS (Name : a_)
            RHS (Num : 1)
         Asgn:
            LHS (Name : b_)
            RHS (Num : 1)
         Asgn:
            LHS (Name : c_)
            RHS (Num : 1)
         Asgn:
            LHS (Name : d_)
            RHS (Num : 1)
         WHILE : 
         CONDITION (
            Condition: LE
               LHS (Name : a1_)
               RHS (Num : 100))
         BODY (
            
         Asgn:
            LHS (Name : a_)
            RHS (
            Arith: PLUS
               LHS (Name : a_)
               RHS (Num : 1))
            
         IF : 
         CONDITION (
            Condition: GE
               LHS (Num : 2)
               RHS (Num : 3))
         THEN (
            
         Asgn:
            LHS (Name : a_)
            RHS (
            Arith: PLUS
               LHS (Name : a_)
               RHS (Num : 1)))
            
         IF : 
         CONDITION (
            Condition: GE
               LHS (Num : 3)
               RHS (Num : 2))
         THEN (
            
         Asgn:
            LHS (Name : a_)
            RHS (
            Arith: PLUS
               LHS (Name : a_)
               RHS (Num : 1)))
            
         IF : 
         CONDITION (
            Condition: LE
               LHS (Num : 2)
               RHS (Num : 3))
         THEN (
            
         Asgn:
            LHS (Name : a_)
            RHS (
            Arith: PLUS
               LHS (Name : a_)
               RHS (Num : 1)))
            
         IF : 
         CONDITION (
            Condition: NE
               LHS (Num : 2)
               RHS (Num : 3))
         THEN (
            
         Asgn:
            LHS (Name : a_)
            RHS (
            Arith: PLUS
               LHS (Name : a_)
               RHS (Num : 1)))
            
         IF : 
         CONDITION (
            Condition: EQ
               LHS (Num : 2)
               RHS (Num : 3))
         THEN (
            
         Asgn:
            LHS (Name : a_)
            RHS (
            Arith: PLUS
               LHS (Name : a_)
               RHS (Num : 1)))
            
         IF : 
         CONDITION (
            Condition: GE
               LHS (Num : 4)
               RHS (Num : 3))
         THEN (
            
         Asgn:
            LHS (Name : a_)
            RHS (
            Arith: PLUS
               LHS (Name : a_)
               RHS (Num : 1)))
            
         DO (
            
         Asgn:
            LHS (Name : a1_)
            RHS (
            Arith: PLUS
               LHS (Name : a1_)
               RHS (Num : 1)))
         WHILE CONDITION (
            Condition: LE
               LHS (Name : a1_)
               RHS (Num : 200))
            
         Write :
               (Name : a1_))
         Write :
               (Name : a_)
**END: Abstract Syntax Tree 
