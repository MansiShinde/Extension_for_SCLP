Program:
**PROCEDURE: main, Return Type: VOID
**BEGIN: Abstract Syntax Tree 
         Asgn:
            LHS (Name : a_)
            RHS (Num : 2)
         Asgn:
            LHS (Name : b_)
            RHS (Num : 4)
         Asgn:
            LHS (Name : c_)
            RHS (Num : 10)
         Asgn:
            LHS (Name : d_)
            RHS (Num : 3)
         Asgn:
            LHS (Name : e_)
            RHS (Num : 8)
         Asgn:
            LHS (Name : f_)
            RHS (Num : 7)
         IF : 
         CONDITION (
            Condition: OR
               LHS (
            Condition: AND
               LHS (
            Condition: GE
               LHS (Name : a_)
               RHS (
            Arith: PLUS
               LHS (Name : b_)
               RHS (Name : c_)))
               RHS (
            Condition: LT
               LHS (Name : d_)
               RHS (
            Arith: MINUS
               LHS (Name : e_)
               RHS (Name : a_))))
               RHS (
            Condition: NE
               LHS (Name : f_)
               RHS (Name : d_)))
         THEN (
         Asgn:
            LHS (Name : a_)
            RHS (
            Arith: PLUS
               LHS (Name : a_)
               RHS (
            Arith: DIV
               LHS (
            Arith: MULT
               LHS (Name : d_)
               RHS (Name : e_))
               RHS (Name : f_))))
         ELSE (
         Asgn:
            LHS (Name : b_)
            RHS (Num : 1))
**END: Abstract Syntax Tree 
