Program:
**PROCEDURE: f_, Return Type: INT
	n_  Type:INT
**BEGIN: Abstract Syntax Tree 
         IF : 
         CONDITION (
            Condition: EQ
               LHS (Name : n_)
               RHS (Num : 0))
         THEN (
            
         Asgn:
            LHS (Name : ret_)
            RHS (Num : 1)
            
         RETURN Name : ret_
)
         Asgn:
            LHS (Name : k_)
            RHS (
            Arith: MINUS
               LHS (Name : n_)
               RHS (Num : 1))
         Asgn:
            LHS (Name : ret_)
            RHS (
         FN CALL: f_(
            Name : k_))
         Asgn:
            LHS (Name : ret_)
            RHS (
            Arith: MULT
               LHS (Name : n_)
               RHS (Name : ret_))
         RETURN Name : ret_

**END: Abstract Syntax Tree 
**PROCEDURE: main, Return Type: VOID
**BEGIN: Abstract Syntax Tree 
         Asgn:
            LHS (Name : b_)
            RHS (Num : 5)
         Asgn:
            LHS (Name : a_)
            RHS (
         FN CALL: f_(
            Name : b_))
         Write :
               (Name : a_)
         Asgn:
            LHS (Name : m_)
            RHS (Num : 2)
         Write :
               (Name : m_)
**END: Abstract Syntax Tree 
