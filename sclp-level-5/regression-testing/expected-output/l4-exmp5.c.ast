Program:
**PROCEDURE: main, Return Type: VOID
**BEGIN: Abstract Syntax Tree 
         Read :
               (Name : local_)
         Asgn:
            LHS (Name : global2_)
            RHS (Name : local_)
         Asgn:
            LHS (Name : global1_)
            RHS (Num : 5)
         Asgn:
            LHS (Name : ans_)
            RHS (
         Cond:
            IF_ELSE
            Condition: AND
               LHS (
            Condition: GT
               LHS (Name : global2_)
               RHS (Name : global1_))
               RHS (
            Condition: NE
               LHS (
            Arith: MINUS
               LHS (Name : local_)
               RHS (Num : 2))
               RHS (Num : 0))
            LHS (Num : 1)
            RHS (Num : 0))
         IF : 
         CONDITION (
            Condition: EQ
               LHS (Name : ans_)
               RHS (Num : 1))
         THEN (
            
         WHILE : 
         CONDITION (
            Condition: GT
               LHS (Name : global2_)
               RHS (Num : 0))
         BODY (
            
         Write :
               (Name : global2_)
            
         Asgn:
            LHS (Name : global2_)
            RHS (
            Arith: MINUS
               LHS (Name : global2_)
               RHS (Num : 1))))
         ELSE (
            
         DO (
            
         Write :
               (Name : global2_)
            
         Asgn:
            LHS (Name : global2_)
            RHS (
            Arith: PLUS
               LHS (Name : global2_)
               RHS (Num : 1)))
         WHILE CONDITION (
            Condition: LT
               LHS (Name : global2_)
               RHS (Num : 10)))
**END: Abstract Syntax Tree 
