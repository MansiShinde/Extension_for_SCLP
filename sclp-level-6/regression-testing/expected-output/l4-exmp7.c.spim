
	.text 			# The .text assembler directive indicates
	.globl main		# The following is the code (as oppose to data)
main:				# .globl makes main know to the 
				# outside of the program.
# Prologue begins 
	sw $ra, 0($sp)		# Save the return address
	sw $fp, -4($sp)		# Save the frame pointer
	sub $fp, $sp, 8		# Update the frame pointer

	sub $sp, $sp, 12		# Make space for the locals
# Prologue ends

	lw $v0, -4($fp)		# Source:a_
	li $t1, 20		# Source:20
	sgt $t0, $v0, $t1	# Result:temp0, Opd1:a_, Opd2:20
	xori $v0, $t0, 1
	xori $t0, $v0, 1
	bgtz $t0, Label4 
	li $v0, 30		# Source:30
	sw $v0, -4($fp)	# Dest: a_
	j Label5

Label4:    	
	li $v0, 40		# Source:40
	sw $v0, -4($fp)	# Dest: a_

Label5:    	

Label5:    	
	lw $v0, -4($fp)		# Source:a_
	li $t1, 30		# Source:30
	sgt $t0, $v0, $t1	# Result:temp3, Opd1:a_, Opd2:30
	xori $v0, $t0, 1
	bgtz $v0, Label8 
	li $v0, 40		# Source:40
	sw $v0, -4($fp)	# Dest: a_
	j Label5

Label8:    	
	li $v0, 30		# Source:30
	neg $t0, $v0		# Result:temp5, Opd1:30
	sw $t0, -4($fp)	# Dest: a_
	lw $v0, -4($fp)		# Source:a_
	neg $t0, $v0		# Result:temp6, Opd1:a_
	li $t1, 30		# Source:30
	sgt $v0, $t0, $t1	# Result:temp7, Opd1:temp6, Opd2:30
	xori $t0, $v0, 1
	bgtz $t0, Label10 
	li $v0, 50		# Source:50
	sw $v0, -4($fp)	# Dest: a_
	j Label10

Label10:    	
	NOP

# Epilogue Begins
epilogue_main:
	add $sp, $sp, 12
	lw $fp, -4($sp)  
	lw $ra, 0($sp)   
	jr        $31		# Jump back to the called procedure
# Epilogue Ends

