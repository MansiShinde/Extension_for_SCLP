
	.text 			# The .text assembler directive indicates
	.globl main		# The following is the code (as oppose to data)
main:				# .globl makes main know to the 
				# outside of the program.
# Prologue begins 
	sw $ra, 0($sp)		# Save the return address
	sw $fp, -4($sp)		# Save the frame pointer
	sub $fp, $sp, 8		# Update the frame pointer

	sub $sp, $sp, 16		# Make space for the locals
# Prologue ends

	li $v0, 3		# Source:3
	sw $v0, -4($fp)	# Dest: n_
	lw $v0, -4($fp)		# Source:n_
	li $t1, 2		# Source:2
	div $t0, $v0, $t1	# Result:temp0, Opd1:n_, Opd2:2
	li $t1, 2		# Source:2
	mul $v0, $t0, $t1	# Result:temp1, Opd1:temp0, Opd2:2
	lw $t1, -4($fp)		# Source:n_
	seq $t0, $v0, $t1	# Result:temp2, Opd1:temp1, Opd2:n_
	xori $v0, $t0, 1
	bgtz $v0, Label4 
	li $v0, 1		# Source:1
	sw $v0, -8($fp)	# Dest: cntr_
	j Label5

Label4:    	
	li $v0, 0		# Source:0
	sw $v0, -8($fp)	# Dest: cntr_

Label5:    	
	NOP

# Epilogue Begins
epilogue_main:
	add $sp, $sp, 16
	lw $fp, -4($sp)  
	lw $ra, 0($sp)   
	jr        $31		# Jump back to the called procedure
# Epilogue Ends

